<?php 
require_once "vendor/autoload.php";
include "config.php";

$token = "573869217:AAHa-kFyMQJ-TXV_wsLDlnQqw9hs5Wu2ujU";
$bot = new \TelegramBot\Api\Client($token);

$fishy = new Fishy();
$fishy -> connect_db(HOST, USER, PASS, DB);

function getList($len, $list, $date) {
		

	    $answer = "*–í–∞—à–∏ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –¥–∞—Ç—É $date:*\n\n";
	    for ($i=0; $i < $len; $i++) {

	    	if($list[$i]['status'] == 1){
				$smile = "\xE2\x9C\x85"; //–≥–∞–ª–æ—á–∫–∞
			} else{
				$smile = "\xF0\x9F\x94\xA5";//–æ–≥–æ–Ω—å
			}

	    	$answer .= $i+1 .") " . $list[$i]['description'] . " " . $smile ."\n";
	    }    	
	    return $answer;
}

function getListJSON($len, $list, $date) {
	    $answer = "*–í–∞—à–∏ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ –¥–∞—Ç—É $date:*\n\n";
	    for ($i=0; $i < $len; $i++) {

	    	if($list[$i]->status == 1){
				$smile = "\xE2\x9C\x85"; //–≥–∞–ª–æ—á–∫–∞
			} else{
				$smile = "\xF0\x9F\x94\xA5";//–æ–≥–æ–Ω—å
			}

	    	$answer .= $i+1 .") " . $list[$i]->description . " " . $smile . "\n";
	    }    	
	    return $answer;
}

function countDone($list) {
		$len = count($list);
	    
	    $done = 0;
	    for ($i=0; $i < $len; $i++) {
	    	if($list[$i]['status'] == 1){
				$done++;
			} 
	    }    	
	    $answer = "\n–°–µ–≥–æ–¥–Ω—è —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª $done/$len —Ü–µ–ª–µ–π.";
	    if($done == $len) {
	    	$answer .= "\n–¢—ã –æ—Ç–ª–∏—á–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª! –ú–æ–∂–µ—à—å —Å–æ–±–æ–π –≥–æ—Ä–¥–∏—Ç—å—Å—è! –°–µ–≥–æ–¥–Ω—è —Ç—ã –ª—É—á—à–∏–π. \xF0\x9F\x92\xAA";
	    } 
	    else if($done == 0) {
	    	$answer .= "\n–ö–∞–∫-—Ç–æ —Å–ª–∞–±–æ... –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Å–µ–≥–æ–¥–Ω—è —Ç—ã –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –Ω–∏ –æ–¥–Ω–æ–π –∏–∑ –ø–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ü–µ–ª–µ–π. –†–∞–±–æ—Ç–∞–π –Ω–∞–¥ —Å–æ–±–æ–π! \xF0\x9F\x92\xA9 \n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ–∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ü–µ–ª–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /movetomorrow.";
	    } else  {
	    	$answer .= "\n–ú–æ–ª–æ–¥–µ—Ü! –í–∏–∂—É —Ç—ã —Å—Ç–∞—Ä–∞–ª—Å—è, —Ö–æ—Ç—å –∏ –Ω–µ –≤—ã–ø–æ–ª–Ω–∏–ª –≤—Å–µ—Ö —Ü–µ–ª–µ–π. \xE2\x9D\xA4 \n–ß—Ç–æ–±—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ–∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ü–µ–ª–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Å—è –∫–æ–º–∞–Ω–¥–æ–π /movetomorrow.";
	    }
	    return $answer;
}

function greet($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$list = $fishy -> getUsers();
	$len = count($list);

	for ($i=0; $i < $len; $i++) { 
			$answer = "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ! üôâ\n–ì–æ—Ç–æ–≤ –∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–º—É –¥–Ω—é —Å–µ–≥–æ–¥–Ω—è?\n\n";
			$chat_id = $list[$i]['chat_id'];

			$date = "today";
		    $date = $fishy -> checkdate($date, $chat_id);
		    $user_list = $fishy -> getTodo($chat_id, $date);

		    $hour = $fishy -> getHour($chat_id);
		    $settings = $fishy -> getSettings($chat_id);
		    $greet = $settings['greet_time'];

		    if($hour != $greet)
		    continue;

		    $user_len = count($user_list);

		    if($user_len > 0){
				$answer .= getList($user_len, $user_list, $date);
		    } else $answer .= "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";

		    if($fishy -> checkYesterday($date)){
		    	$answer .= "\n\n*–£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –≤—á–µ—Ä–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è!*\n–°–∞–º–æ–µ –≤—Ä–µ–º—è –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å –∏—Ö —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã /movetoday";
		    }

		    try {
				$bot->sendMessage($chat_id, $answer, "Markdown");
			} catch (Exception $e) {
				continue;
			}
	}

}

function sumTasks($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$list = $fishy -> getUsers();
	$len = count($list);

	for ($i=0; $i < $len; $i++) { 
			$answer = "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä! üåö\n–î–∞–≤–∞–π –ø–æ—Å–º–æ—Ç—Ä–∏–º –∫–∞–∫ —Ç—ã —Å–µ–≥–æ–¥–Ω—è –ø–æ—Ä–∞–±–æ—Ç–∞–ª!\n\n";
			$chat_id = $list[$i]['chat_id'];

			$date = "today";
		    $date = $fishy -> checkdate($date, $chat_id);
		    $user_list = $fishy -> getTodo($chat_id, $date);
		    $user_len = count($user_list);

		    $hour = $fishy -> getHour($chat_id);
		    $settings = $fishy -> getSettings($chat_id);
		    $sum = $settings['sum_time'];

		    if($hour != $sum)
		    continue;

		    if($user_len > 0){
				$answer .= getList($user_len, $user_list, $date);
				$answer .= countDone($user_list);
		    } else $answer .= "–°–µ–≥–æ–¥–Ω—è —è –Ω–µ –Ω–∞—à–ª–∞ —É —Ç–µ–±—è —Ü–µ–ª–µ–π. –ê –∂–∞–ª—å, –≤–µ–¥—å TODO-list —ç—Ç–æ –æ—á–µ–Ω—å –ø–æ–ª–µ–∑–Ω–∞—è –≤–µ—â—å.\n–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ —Å–µ–±–µ –º–æ–∂–Ω–æ —Å –ø–æ–º–æ—â—å—é /add";


		    try {
				$bot->sendMessage($chat_id, $answer, "Markdown");
			} catch (Exception $e) {
				continue;
			}
	}

}

function notify($bot, $notification) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$list = $fishy -> getUsers();
	$len = count($list);

	for ($i=0; $i < $len; $i++) { 
			$chat_id = $list[$i]['chat_id'];
		try {
			$bot->sendMessage($chat_id, $notification, "Markdown");
		} catch (Exception $e) {
			continue;
		}
	}

}
// $output = json_decode(file_get_contents('php://input'), TRUE);
// $chat_id = $output['message']['chat']['id'];
// $message = $output['message']['text'];
// $callback_query = $output['callback_query'];
// $data = $callback_query['data'];
// $message_id = ['callback_query']['message']['message_id'];
// $chat_id_in = $callback_query['message']['chat']['id'];
// $bot->sendMessage($chat_id_in, $data);


$bot->on(function($update) use ($bot, $callback_loc, $find_command){
	$callback = $update->getCallbackQuery();
	$message = $callback->getMessage();
	$chat_id = $message->getChat()->getId();
	$data = $callback->getData();



	$message_id = $message -> getMessageId();


	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$data = json_decode($data);

	$command = $data -> command;
	


	if(strcasecmp($command, "add") == 0){
		$date = $data -> date;
    	$date = $fishy -> checkdate($date, $chat_id);
    	$commandObj -> date = $date;
    	$json = json_encode($commandObj);

    	$fishy -> updateCommand($chat_id, "add", 0, $json);

    	$bot->editMessageText($chat_id, $message_id, "–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ —Å–µ–±–µ –∑–∞–¥–∞–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä \"–∏—Å–∫—É–ø–∞—Ç—å –∫–æ—Ç–∞\": ",  "Markdown");
    	$bot->answerCallbackQuery($callback->getId());
	}

	if(strcasecmp($command, "list") == 0){
		$date = $data -> date;
    	$date = $fishy -> checkdate($date, $chat_id);

    	$list = $fishy -> getTodo($chat_id, $date);
    	$len = count($list);

		if($len > 0){
			$answer = getList($len, $list, $date);
		} else $answer = "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";

    	$bot->editMessageText($chat_id, $message_id, $answer,  "Markdown");
    	$bot->answerCallbackQuery($callback->getId());
	}

	if(strcasecmp($command, "rm") == 0){
		$date = $data -> date;
    	$date = $fishy -> checkdate($date, $chat_id);
    	$commandObj -> date = $date;
    	$json = json_encode($commandObj);

    	$fishy -> updateCommand($chat_id, "rm", 0, $json);

    	$list = $fishy -> getTodo($chat_id, $date);
    	$len = count($list);

		if($len > 0){
    		$commandObj -> list = $list;
    		$json = json_encode($commandObj);

		    $fishy -> updateCommand($chat_id, "remove", 1, $json);

			$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		            [
		                [
		                    ['text' => '1', 'callback_data' => '{"command":"num", "num":1, "block":"rm"}'],
		                    ['text' => '2', 'callback_data' => '{"command":"num", "num":2, "block":"rm"}'],
		                    ['text' => '3', 'callback_data' => '{"command":"num", "num":3, "block":"rm"}'],
		                    ['text' => '4', 'callback_data' => '{"command":"num", "num":4, "block":"rm"}'],
		                    ['text' => '5', 'callback_data' => '{"command":"num", "num":5, "block":"rm"}'],
		                    ['text' => '6', 'callback_data' => '{"command":"num", "num":6, "block":"rm"}']
		                ],
		                [
		                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"rm\", \"prev\":0}"],
		                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"rm\", \"next\":7}"]
		                ],
		                [
		                    ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
		                ], 
		            ]
		    );

			$answer = getList($len, $list, $date) . "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";
			$bot->editMessageText($chat_id, $message_id, $answer,  "Markdown", false, $keyboard);
	    	$bot->answerCallbackQuery($callback->getId());

		    } else {
		    	$fishy -> updateCommand($chat_id, "", 0, "");
		    	$answer = "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";
		    	$bot->editMessageText($chat_id, $message_id, $answer,  "Markdown");
		    	$bot->answerCallbackQuery($callback->getId());
		    }

	}

	if(strcasecmp($command, "num") == 0){
		$num = $data -> num;
		$cmd = $fishy -> getCommand($chat_id);

    	$commandBody = json_decode($cmd['json']);

    	$date = $commandBody->date;
    	$date = $fishy -> checkdate($date, $chat_id);


    	$block = $data -> block;
    	if(strcasecmp($block, "rm") == 0){
	    	$answer = $fishy -> removeTodo($date, $commandBody->list[$num-1]->description, $chat_id);
	    	array_splice($commandBody->list, $num-1, 1);
	    	$json = json_encode($commandBody);
	    	$fishy -> updateCommand($chat_id, "remove", 1, $json);

	    	$list = $commandBody->list;
	    	$len = count($list);
	    	$answer .= getListJSON($len, $list, $date);
			$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
			        [
			            [
			                ['text' => '1', 'callback_data' => '{"command":"num", "num":1, "block":"rm"}'],
			                ['text' => '2', 'callback_data' => '{"command":"num", "num":2, "block":"rm"}'],
			                ['text' => '3', 'callback_data' => '{"command":"num", "num":3, "block":"rm"}'],
			                ['text' => '4', 'callback_data' => '{"command":"num", "num":4, "block":"rm"}'],
			                ['text' => '5', 'callback_data' => '{"command":"num", "num":5, "block":"rm"}'],
			                ['text' => '6', 'callback_data' => '{"command":"num", "num":6, "block":"rm"}']
			            ],
			            [
			                ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"rm\", \"prev\":0}"],
			                ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"rm\", \"next\":7}"]
			            ],
			            [
			                ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
			            ], 
			        ]
			);

			$answer .= "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";    	
    	}

    	if(strcasecmp($block, "cp") == 0){
	  		$answer = $fishy -> completeTask($date, $commandBody->list[$num-1]->description, $chat_id);

	  		$commandBody -> list[$num-1] -> status = 1;
	    	$json = json_encode($commandBody);
	    	$fishy -> updateCommand($chat_id, "complete", 0, $json);

	    	$list = $commandBody->list;
	    	$len = count($list);
	    	$answer .= getListJSON($len, $list, $date);
			$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
			        [
			            [
			                ['text' => '1', 'callback_data' => '{"command":"num", "num":1, "block":"cp"}'],
			                ['text' => '2', 'callback_data' => '{"command":"num", "num":2, "block":"cp"}'],
			                ['text' => '3', 'callback_data' => '{"command":"num", "num":3, "block":"cp"}'],
			                ['text' => '4', 'callback_data' => '{"command":"num", "num":4, "block":"cp"}'],
			                ['text' => '5', 'callback_data' => '{"command":"num", "num":5, "block":"cp"}'],
			                ['text' => '6', 'callback_data' => '{"command":"num", "num":6, "block":"cp"}']
			            ],
			            [
			                ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"cp\", \"prev\":0}"],
			                ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"cp\", \"next\":7}"]
			            ],
			            [
			                ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
			            ], 
			        ]
			);

			$answer .= "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä —Ç–∞—Å–∫–∞, _–∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª —Å–µ–≥–æ–¥–Ω—è_, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";    	
    	}

		$bot->editMessageText($chat_id, $message_id, $answer,  "Markdown", false, $keyboard);
	    $bot->answerCallbackQuery($callback->getId());
	}

if(strcasecmp($command, "prev_list") == 0){
		$prev = $data -> prev;
		
		$block = $data -> block;
		if($prev == 0){
			$bot->answerCallbackQuery($callback->getId());
			return;
		}

		$cmd = $fishy -> getCommand($chat_id);

    	$commandBody = json_decode($cmd['json']);

    	$date = $commandBody->date;
    	$date = $fishy -> checkdate($date, $chat_id);

    	$list = $commandBody->list;
    	$len = count($list);


		if(strcasecmp($block, "rm") == 0){
    	$answer .= getListJSON($len, $list, $date) . "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";
			$i = $prev;
			//echo $num[0] =  "{\"command\":\"num\", \"num\":$i-6, \"block\":\"rm\"}";
		$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		        [
		            [
		                ['text' => ($i-5), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-5).", \"block\":\"rm\"}"],
		                ['text' => ($i-4), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-4).", \"block\":\"rm\"}"],
		                ['text' => ($i-3), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-3).", \"block\":\"rm\"}"],
		                ['text' => ($i-2), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-2).", \"block\":\"rm\"}"],
		                ['text' => ($i-1), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-1).", \"block\":\"rm\"}"],
		                ['text' => ($i), 'callback_data' => "{\"command\":\"num\", \"num\":".($i).", \"block\":\"rm\"}"]
		            ],
		            [
		                ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"rm\", \"prev\":".($i-6)."}"],
		                ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"rm\", \"next\":".($i+1)."}"]
		            ],
		            [
		                ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
		            ], 
		        ]
		);			
		}

		if(strcasecmp($block, "cp") == 0){
    	$answer .= getListJSON($len, $list, $date) . "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, _–∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª —Å–µ–≥–æ–¥–Ω—è_, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";
			$i = $prev;
			//echo $num[0] =  "{\"command\":\"num\", \"num\":$i-6, \"block\":\"rm\"}";
		$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		        [
		            [
		                ['text' => ($i-5), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-5).", \"block\":\"cp\"}"],
		                ['text' => ($i-4), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-4).", \"block\":\"cp\"}"],
		                ['text' => ($i-3), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-2).", \"block\":\"cp\"}"],
		                ['text' => ($i-2), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-2).", \"block\":\"cp\"}"],
		                ['text' => ($i-1), 'callback_data' => "{\"command\":\"num\", \"num\":".($i-1).", \"block\":\"cp\"}"],
		                ['text' => ($i), 'callback_data' => "{\"command\":\"num\", \"num\":".($i).", \"block\":\"cp\"}"]
		            ],
		            [
		                ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"cp\", \"prev\":".($i-6)."}"],
		                ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"cp\", \"next\":".($i+1)."}"]
		            ],
		            [
		                ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
		            ], 
		        ]
		);			
		}

		$bot->editMessageText($chat_id, $message_id, $answer,  "Markdown", false, $keyboard);
	    $bot->answerCallbackQuery($callback->getId());
	}

if(strcasecmp($command, "next_list") == 0){
		$next = $data -> next;
		
		$block = $data -> block;

		$cmd = $fishy -> getCommand($chat_id);

    	$commandBody = json_decode($cmd['json']);

    	$date = $commandBody->date;
    	$date = $fishy -> checkdate($date, $chat_id);

    	$list = $commandBody->list;
    	$len = count($list);


		if(strcasecmp($block, "rm") == 0){
    	$answer .= getListJSON($len, $list, $date) . "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";			
			$i = $next;
		$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		        [
		            [
		                ['text' => ($i), 'callback_data' => '{"command":"num", "num":'.($i).', "block":"rm"}'],
		                ['text' => ($i+1), 'callback_data' => '{"command":"num", "num":'.($i+1).', "block":"rm"}'],
		                ['text' => ($i+2), 'callback_data' => '{"command":"num", "num":'.($i+2).', "block":"rm"}'],
		                ['text' => ($i+3), 'callback_data' => '{"command":"num", "num":'.($i+3).', "block":"rm"}'],
		                ['text' => ($i+4), 'callback_data' => '{"command":"num", "num":'.($i+4).', "block":"rm"}'],
		                ['text' => ($i+5), 'callback_data' => '{"command":"num", "num":'.($i+5).', "block":"rm"}']
		            ],
		            [
		                ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"rm\", \"prev\":".($i-1)."}"],
		                ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"rm\", \"next\":".($i+6)."}"]
		            ],
		            [
		                ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
		            ], 
		        ]
		);			
		}

		if(strcasecmp($block, "cp") == 0){
    	$answer .= getListJSON($len, $list, $date) . "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, _–∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª —Å–µ–≥–æ–¥–Ω—è_, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";			
			$i = $next;
		$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		        [
		            [
		                ['text' => ($i), 'callback_data' => '{"command":"num", "num":'.($i).', "block":"cp"}'],
		                ['text' => ($i+1), 'callback_data' => '{"command":"num", "num":'.($i+1).', "block":"cp"}'],
		                ['text' => ($i+2), 'callback_data' => '{"command":"num", "num":'.($i+2).', "block":"cp"}'],
		                ['text' => ($i+3), 'callback_data' => '{"command":"num", "num":'.($i+3).', "block":"cp"}'],
		                ['text' => ($i+4), 'callback_data' => '{"command":"num", "num":'.($i+4).', "block":"cp"}'],
		                ['text' => ($i+5), 'callback_data' => '{"command":"num", "num":'.($i+5).', "block":"cp"}']
		            ],
		            [
		                ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"cp\", \"prev\":".($i-1)."}"],
		                ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"cp\", \"next\":".($i+6)."}"]
		            ],
		            [
		                ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
		            ], 
		        ]
		);			
		}

		$bot->editMessageText($chat_id, $message_id, $answer,  "Markdown", false, $keyboard);
	    $bot->answerCallbackQuery($callback->getId());
	}

	if(strcasecmp($command, "next") == 0 || strcasecmp($command, "prev") == 0){


		$date = $data -> date;
		$date = $fishy -> checkdate($date, $chat_id);

    	$block = $data -> block;

    	if(strcasecmp($command, "prev") == 0){
    		$date = $fishy -> addDay($date, -1);
    	} else $date = $fishy -> addDay($date, 1);
		
    	
    	if(strcasecmp($block, "add") == 0){
	    	$fishy -> updateCommand($chat_id, "", 0, "");

			$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		            [
		                [
		                    ['text' => '–°–µ–≥–æ–¥–Ω—è', 'callback_data' => '{"command":"add", "date":"today"}'],['text' => '–ó–∞–≤—Ç—Ä–∞', 'callback_data' => '{"command":"add", "date":"tomorrow"}'],
		                ], 
		                [
		                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev\", \"date\":\"$date\", \"block\":\"add\"}"],['text' => $date, 'callback_data' => "{\"command\":\"add\", \"date\":\"$date\"}"],
		                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next\", \"date\":\"$date\", \"block\":\"add\"}"]
		                ]
		            ]
		        );
			$text = "–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –∑–∞–ø–∏—à–µ–º —Ç–∞—Å–∫?";
		}

    	if(strcasecmp($block, "list") == 0){

			$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		            [
		                [
		                    ['text' => '–°–µ–≥–æ–¥–Ω—è', 'callback_data' => '{"command":"list", "date":"today"}'],['text' => '–ó–∞–≤—Ç—Ä–∞', 'callback_data' => '{"command":"list", "date":"tomorrow"}'],
		                ], 
		                [
		                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev\", \"date\":\"$date\", \"block\":\"list\"}"],['text' => $date, 'callback_data' => "{\"command\":\"list\", \"date\":\"$date\"}"],
		                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next\", \"date\":\"$date\", \"block\":\"list\"}"]
		                ]
		            ]
		        );
			$text = "–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π?";
		}

    	if(strcasecmp($block, "rm") == 0){

			$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		            [
		                [
		                    ['text' => '–°–µ–≥–æ–¥–Ω—è', 'callback_data' => '{"command":"rm", "date":"today"}'],['text' => '–ó–∞–≤—Ç—Ä–∞', 'callback_data' => '{"command":"rm", "date":"tomorrow"}'],
		                ], 
		                [
		                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev\", \"date\":\"$date\", \"block\":\"rm\"}"],['text' => $date, 'callback_data' => "{\"command\":\"rm\", \"date\":\"$date\"}"],
		                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next\", \"date\":\"$date\", \"block\":\"rm\"}"]
		                ]
		            ]
		        );
			$text = "–° –∫–∞–∫–æ–π –¥–∞—Ç—ã –º–Ω–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ?";
		}

		$bot->editMessageText($chat_id, $message_id, $text, null, false, $keyboard);   		
    	$bot->answerCallbackQuery($callback->getId());

	}	

	if(strcasecmp($command, "ready") == 0){
    	$fishy -> updateCommand($chat_id, "", 0, "");

    	$bot->editMessageText($chat_id, $message_id, "–î–µ–ª–æ —Å–¥–µ–ª–∞–Ω–æ.",  "Markdown");
    	$bot->answerCallbackQuery($callback->getId());
	}

	



}, function($update){
	$callback = $update->getCallbackQuery();
	if (is_null($callback) || !strlen($callback->getData()))
	return false;
	return true;
});

$bot->on(
  function($Update) use ($bot)
  {
    $message = $Update->getMessage();
    $user_text = $message->getText();
    $chat_id = $message->getChat()->getId();
    $updateId = $Update->getUpdateId();
    $fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$cmd = $fishy -> getCommand($chat_id);

	if(strcasecmp($cmd['command_name'], "add") == 0) {
    	if($cmd['progress'] == 0){
    		//$user_text = $fishy -> checkdate($user_text, $chat_id);
    		$commandBody = json_decode($cmd['json']);
    		$date = $commandBody->date;

    		$fishy -> updateCommand($chat_id, "", 0, "");
    		$answer = $fishy -> addTodo($date, $user_text, $chat_id);

    		$bot->sendMessage($chat_id, $answer);
    	}
	}


  	if(strcasecmp($cmd['command_name'], "gmt") == 0) {
  		if($cmd['progress'] == 0){

  		if(preg_match("[^(\+|-)\d]", $user_text)){
  			$answer = $fishy -> setGmt($chat_id, $user_text);
  			$fishy -> updateCommand($chat_id, "", 0, "");
  		}
  		
  		else {
  			$answer = "–í–≤–µ–¥—ë–Ω–Ω–æ–µ –≤–∞–º–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.\n–í–ø–∏—à–∏ —Å–≤–æ–π GMT, –Ω–∞–ø—Ä–∏–º–µ—Ä \"+2\".";
  		} 

    	$bot->sendMessage($chat_id, $answer, "Markdown");
  		}
  	}

  	if(strcasecmp($cmd['command_name'], "greet") == 0) {
  		if($cmd['progress'] == 0){

  		if((int)$user_text >= 0 && (int)$user_text <= 23){
  			$answer = $fishy -> setGreet($chat_id, $user_text);
  			$fishy -> updateCommand($chat_id, "", 0, "");
  		}
  		
  		else {
  			$answer = "–í–≤–µ–¥—ë–Ω–Ω–æ–µ –≤–∞–º–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.\n–í–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É (0-23), –Ω–∞–ø—Ä–∏–º–µ—Ä \"8\".";
  		} 

  		
    	$bot->sendMessage($chat_id, $answer, "Markdown");
  		}
  	}

  	if(strcasecmp($cmd['command_name'], "sum") == 0) {
  		if($cmd['progress'] == 0){

  		if((int)$user_text >= 0 && (int)$user_text <= 23){
  			$answer = $fishy -> setSum($chat_id, $user_text);
  			$fishy -> updateCommand($chat_id, "", 0, "");
  		}
  		
  		else {
  			$answer = "–í–≤–µ–¥—ë–Ω–Ω–æ–µ –≤–∞–º–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º.\n–í–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É (0-23), –Ω–∞–ø—Ä–∏–º–µ—Ä \"8\".";
  		} 
  		
    	$bot->sendMessage($chat_id, $answer, "Markdown");
  		}
  	}
	//$bot->sendMessage($chat_id, $user_text);
},
function($message) use ($name)
{
  return true; // –∫–æ–≥–¥–∞ —Ç—É—Ç true - –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ö–æ–¥–∏—Ç
});


//sumTasks($bot);
//greet($bot);

// –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è start
$bot->command('start', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

    $answer = "–ü—Ä–∏–≤–µ—Ç, —è —Ä—ã–±–∫–∞ Fishy!\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —Å–≤–æ–π –¥–µ–Ω—å, —Å–¥–µ–ª–∞—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –∏ –ø–æ–º–æ—á—å —Å –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏. –¢—É—Ç —Ç—ã —Å–º–æ–∂–µ—à—å –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å todo-list, –æ–±–æ–∑–Ω–∞—á–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏–µ, –∏ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –Ω–∞ –ø–æ—Ç–æ–º. –ö–∞–∂–¥–æ–µ —É—Ç—Ä–æ —è –±—É–¥—É —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏ –≥–æ–≤–æ—Ä–∏—Ç—å —Ç–≤–æ–∏ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ç–∞—Å–∫–∏, –∞ –∫–∞–∂–¥—ã–π –≤–µ—á–µ—Ä –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏.\n–í–≤–µ–¥–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –∫–∞–∫ –º–Ω–æ—é –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è!\n\n–¢–∞–∫ –∂–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É—é —Å—Ä–∞–∑—É –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –º–æ–∂–Ω–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö) /settings\n[–ö–∞–∫ —É–∑–Ω–∞—Ç—å —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å?](https://greenwichmeantime.com/time-gadgets/time-zone-converter/)
";
    $chat_id = $message->getChat()->getId();
    $name = $message->getChat()->getUsername();

    $fishy -> addUser($name, $chat_id);
    $bot->sendMessage($chat_id, $answer, "Markdown");
});



$bot->command('help', function ($message) use ($bot) {
	$answer = "/add - –¥–æ–±–∞–≤–∏—Ç—å —Ü–µ–ª—å –Ω–∞ –¥–µ–Ω—å\n/list - —Å–ø–∏—Å–æ–∫ –í–∞—à–∏—Ö —Ç–∞—Å–∫–æ–≤\n\n/complete - –ø–æ–º–µ—Ç–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–º\n/remove - —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ\n\n";
    $answer .= "/today - —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è\n/tomorrow - —Å–ø–∏—Å–æ–∫ —Ü–µ–ª–µ–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞\n\n/settings - –æ—Ç–∫—Ä—ã—Ç—å –æ–∫–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫\n\n/movetomorrow - –ø–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Å–≤–æ–∏ –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ —Ü–µ–ª–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ (–Ω–µ –∑–ª–æ—É–ø–æ—Ç—Ä–µ–±–ª—è–π)\n\nüî• - –Ω–µ–≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n‚úÖ - –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è\n\n–í—Å–µ –¥–∞—Ç—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥, –Ω–∞–ø—Ä–∏–º–µ—Ä 09.09.2018\n\n";
    $bot->sendMessage($message->getChat()->getId(), $answer);
});

$bot->command('settings', function ($message) use ($bot) {
	$answer = "/gmt - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π gmt (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é GMT+3)\n\n/greet - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –±–æ—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 7:00)\n/sum - –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏. (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 22:00)\n\n–í—Å—ë –≤—Ä–µ–º—è –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É–∫–∞–∑–∞–Ω–æ –≤ —Ç–≤–æ—ë–º —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ.";
    $bot->sendMessage($message->getChat()->getId(), $answer);
});

$bot->command('add', function ($message) use ($bot) {

	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();
	$fishy -> updateCommand($chat_id, "add", 0, "{}");

	$after_tomorrow = $fishy -> checkdate("after_tomorrow", $chat_id);


	$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
            [
                [
                    ['text' => '–°–µ–≥–æ–¥–Ω—è', 'callback_data' => '{"command":"add", "date":"today"}'],['text' => '–ó–∞–≤—Ç—Ä–∞', 'callback_data' => '{"command":"add", "date":"tomorrow"}'],
                ], 
                [
                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev\", \"date\":\"$after_tomorrow\", \"block\":\"add\"}"],['text' => $after_tomorrow, 'callback_data' => "{\"command\":\"add\", \"date\":\"$after_tomorrow\"}"],
                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next\", \"date\":\"$after_tomorrow\", \"block\":\"add\"}"]
                ]
            ]
        );

    $bot->sendMessage($chat_id, "–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –∑–∞–ø–∏—à–µ–º —Ç–∞—Å–∫?", null, false, null, $keyboard);
});


$bot->command('list', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();

	$after_tomorrow = $fishy->checkdate("after_tomorrow", $chat_id);
	$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
            [
                [
                    ['text' => '–°–µ–≥–æ–¥–Ω—è', 'callback_data' => '{"command":"list", "date":"today"}'],['text' => '–ó–∞–≤—Ç—Ä–∞', 'callback_data' => '{"command":"list", "date":"tomorrow"}'],
                ], 
                [
                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev\", \"date\":\"$after_tomorrow\", \"block\":\"list\"}"],['text' => $after_tomorrow, 'callback_data' => "{\"command\":\"list\", \"date\":\"$after_tomorrow\"}"],
                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next\", \"date\":\"$after_tomorrow\", \"block\":\"list\"}"]
                ]
            ]
        );

    $bot->sendMessage($chat_id, "–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –±—É–¥–µ–º —Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π?", null, false, null, $keyboard);
});

$bot->command('remove', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();
	$fishy -> updateCommand($chat_id, "remove", 0, "{}");

	$after_tomorrow = $fishy->checkdate("after_tomorrow", $chat_id);
	$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
            [
                [
                    ['text' => '–°–µ–≥–æ–¥–Ω—è', 'callback_data' => '{"command":"rm", "date":"today"}'],['text' => '–ó–∞–≤—Ç—Ä–∞', 'callback_data' => '{"command":"rm", "date":"tomorrow"}'],
                ], 
                [
                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev\", \"date\":\"$after_tomorrow\", \"block\":\"rm\"}"],['text' => $after_tomorrow, 'callback_data' => "{\"command\":\"rm\", \"date\":\"$after_tomorrow\"}"],
                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next\", \"date\":\"$after_tomorrow\", \"block\":\"rm\"}"]
                ]
            ]
        );

    $bot->sendMessage($chat_id, "–° –∫–∞–∫–æ–π –¥–∞—Ç—ã –º–Ω–µ —É–¥–∞–ª–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ?", null, false, null, $keyboard);
});

$bot->command('complete', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();

	// $date = "today";
 //    $date = $fishy -> checkdate($date, $chat_id);
 //    $list = $fishy -> getTodo($message->getChat()->getId(), $date);
 //    $len = count($list);

 //    if($len > 0){
	// 	$answer = "–í–ø–∏—à–∏ –Ω–æ–º–µ—Ä —Ç–∞—Å–∫–∞ (—Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É), –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª. –ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /done\n" . getList($len, $list, $date);
 //    } else {
 //    	$answer = "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";
 //    	return;
 //    }

 //    $commandObj -> list = $list;
 //    $json = json_encode($commandObj);    
 //    $fishy -> updateCommand($chat_id, "complete", 0, $json);

		$date = "today";
    	$date = $fishy -> checkdate($date, $chat_id);
    	$commandObj -> date = $date;
    	$json = json_encode($commandObj);

    	//$fishy -> updateCommand($chat_id, "complete", 0, $json);

    	$list = $fishy -> getTodo($chat_id, $date);
    	$len = count($list);

		if($len > 0){
    		$commandObj -> list = $list;
    		$json = json_encode($commandObj);

		    $fishy -> updateCommand($chat_id, "complete", 1, $json);

			$keyboard = new \TelegramBot\Api\Types\Inline\InlineKeyboardMarkup(
		            [
		                [
		                    ['text' => '1', 'callback_data' => '{"command":"num", "num":1, "block":"cp"}'],
		                    ['text' => '2', 'callback_data' => '{"command":"num", "num":2, "block":"cp"}'],
		                    ['text' => '3', 'callback_data' => '{"command":"num", "num":3, "block":"cp"}'],
		                    ['text' => '4', 'callback_data' => '{"command":"num", "num":4, "block":"cp"}'],
		                    ['text' => '5', 'callback_data' => '{"command":"num", "num":5, "block":"cp"}'],
		                    ['text' => '6', 'callback_data' => '{"command":"num", "num":6, "block":"cp"}']
		                ],
		                [
		                    ['text' => '‚¨ÖÔ∏è', 'callback_data' => "{\"command\":\"prev_list\", \"block\":\"cp\", \"prev\":0}"],
		                    ['text' => '‚û°Ô∏è', 'callback_data' => "{\"command\":\"next_list\", \"block\":\"cp\", \"next\":7}"]
		                ],
		                [
		                    ['text' => '–ì–æ—Ç–æ–≤–æ', 'callback_data' => '{"command":"ready"}']
		                ], 
		            ]
		    );

			$answer = getList($len, $list, $date) . "\n–í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, _–∫–æ—Ç–æ—Ä—ã–π —Ç—ã –≤—ã–ø–æ–ª–Ω–∏–ª —Å–µ–≥–æ–¥–Ω—è_, –∏–∑ —Å–ø–∏—Å–∫–∞, –ø–µ—Ä–µ–∫–ª—é—á–∞–π —Ü–∏—Ñ—Ä—ã —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–µ–ª–æ–∫.\n–ö–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—à—å, –Ω–∞–∂–º–∏ *–ì–æ—Ç–æ–≤–æ*\n";


		    } else {
		    	$fishy -> updateCommand($chat_id, "", 0, "");
		    	$answer = "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";

		    }

    		$bot->sendMessage($chat_id, $answer, "Markdown", false, null, $keyboard);
});

$bot->command('done', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();
	$fishy -> updateCommand($chat_id, "", 0, "");

    $bot->sendMessage($chat_id, "–î–µ–ª–æ —Å–¥–µ–ª–∞–Ω–æ.");
});

$bot->command('movetomorrow', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();
	$answer = $fishy -> moveTomorrow($chat_id);
	$answer .= "–ù–∏–∂–µ —è –≤—ã–≤–µ–¥—É —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–∞ –∑–∞–≤—Ç—Ä–∞: \n\n";

	$date = "tomorrow";
    $date = $fishy -> checkdate($date, $chat_id);
    $list = $fishy -> getTodo($chat_id, $date);
    $len = count($list);

    if($len > 0){
		$answer .= getList($len, $list, $date);
    } else $answer .= "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";
    $bot->sendMessage($chat_id, $answer, "Markdown");
});

$bot->command('movetoday', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();
	$answer = $fishy -> moveToday($chat_id);
	$answer .= "–ù–∏–∂–µ —è –≤—ã–≤–µ–¥—É —Å–ø–∏—Å–æ–∫ —Ç–≤–æ–∏—Ö –∑–∞–¥–∞–Ω–∏–π –Ω–∞ —Å–µ–≥–æ–¥–Ω—è: \n\n";

	$date = "today";
    $date = $fishy -> checkdate($date, $chat_id);
    $list = $fishy -> getTodo($chat_id, $date);
    $len = count($list);

    if($len > 0){
		$answer .= getList($len, $list, $date);
    } else $answer .= "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";
    $bot->sendMessage($chat_id, $answer, "Markdown");
});

$bot->command('today', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);
    	
	$date = "today";
    $date = $fishy -> checkdate($date, $message->getChat()->getId());
    $list = $fishy -> getTodo($message->getChat()->getId(), $date);
    $len = count($list);

    if($len > 0){
		$answer = getList($len, $list, $date);
    } else $answer = "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";

    $bot->sendMessage($message->getChat()->getId(), $answer, "Markdown");
});

$bot->command('tomorrow', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);
    	
	$date = "tomorrow";
    $date = $fishy -> checkdate($date, $message->getChat()->getId());
    $list = $fishy -> getTodo($message->getChat()->getId(), $date);
    $len = count($list);

    if($len > 0){
		$answer = getList($len, $list, $date);
    } else $answer = "–ù–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É –µ—â–µ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π!\n\n–ß—Ç–æ–±—ã –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /add";

    $bot->sendMessage($message->getChat()->getId(), $answer, "Markdown");
});

$bot->command('gmt', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();

	$answer = "–í–ø–∏—à–∏ —Å–≤–æ–π GMT, –Ω–∞–ø—Ä–∏–º–µ—Ä \"+2\".";

    $fishy -> updateCommand($chat_id, "gmt", 0, "{}");

    $bot->sendMessage($chat_id, $answer, "Markdown");
});

$bot->command('greet', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();

	$answer = "–í–ø–∏—à–∏ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —è –±—É–¥—É —Ç–µ–±—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å —É—Ç—Ä–∞ (–∏–ª–∏ –Ω–µ —Å —É—Ç—Ä–∞, –µ—Å–ª–∏ —Ç—ã —Å–æ–≤–∞). –í–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É (0-23), –Ω–∞–ø—Ä–∏–º–µ—Ä \"8\" –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è —è –±—É–¥—É —Å —Ç–æ–±–æ–π –≤ 8:00.";

    $fishy -> updateCommand($chat_id, "greet", 0, "{}");

    $bot->sendMessage($chat_id, $answer, "Markdown");
});

$bot->command('sum', function ($message) use ($bot) {
	$fishy = new Fishy();
	$fishy -> connect_db(HOST, USER, PASS, DB);

	$chat_id = $message->getChat()->getId();

	$answer = "–í–ø–∏—à–∏ –≤—Ä–µ–º—è –≤ –∫–æ—Ç–æ—Ä–æ–µ —è –±—É–¥—É –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏, –ø–æ—Å–ª–µ –∫–æ—Ç–æ—Ä—ã—Ö —Ç—ã –º–æ–∂–µ—à—å –∏–¥—Ç–∏ —Å–ø–∞—Ç—å –∏–ª–∏ –æ—Ç–¥—ã—Ö–∞—Ç—å. –í–ø–∏—à–∏ —Ç–æ–ª—å–∫–æ —Ü–∏—Ñ—Ä—É (0-23), –Ω–∞–ø—Ä–∏–º–µ—Ä \"22\" –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–æ–¥–≤–æ–¥–∏—Ç—å –∏—Ç–æ–≥–∏ —è –±—É–¥—É –≤ 22:00.";

    $fishy -> updateCommand($chat_id, "sum", 0, "{}");

    $bot->sendMessage($chat_id, $answer, "Markdown");
});







$bot->run();

?>
